ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 3) +
scale_color_manual(values = c("red", "black")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 1) +
scale_color_manual(values = c("red", "black")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 2) +
scale_color_manual(values = c("red", "black")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 2) +
scale_color_manual(values = c("red4", "black")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 2) +
scale_color_manual(values = c("red4", "lightblue")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 2) +
scale_color_manual(values = c("red4", "gray70")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 2) +
scale_color_manual(values = c("red4", "gray40")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point(aes(color = "Observado")) +
expand_limits(y = 0) +
stat_summary(fun.y = mean, aes(color = "Média"), geom = "point", shape = 18, size = 2) +
scale_color_manual(values = c("red", "gray40")) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão",
color = "Legend") +
theme(
plot.title = element_text(hjust = 0.5))
# Gráfico de pontos
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point() +
expand_limits(y = 0) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão") +
theme(
plot.title = element_text(hjust = 0.5))
expand_limits(y = 0) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão") +
theme(
plot.title = element_text(hjust = 0.5))
expand_limits(y = 0) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão") +
theme(
plot.title = element_text(hjust = 0.5))
# Gráfico boxplot
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_boxplot() +
expand_limits(y = 0) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão") +
theme(
plot.title = element_text(hjust = 0.5))
# Gráfico boxplot
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_boxplot() +
expand_limits(y = 0) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | BoxPlot") +
theme(
plot.title = element_text(hjust = 0.5))
# Análise de Variância
modelDIC = aov(ALTURA ~ DOSE, DICgarlic)
anova(modelDIC)
plot(modelDIC)
# Gráfico Box-Cox
boxcox(modelDIC, lambda = seq(-2, 2, by = 0.1))
modelLM = lm(ALTURA~DOSE, DICgarlic)
View(modelLM)
View(modelDIC)
rm(modelLM)
residuosDIC = residuals(lmDIC)
residuosDIC <- residuals(lmDIC)
# Modelo linear
lmDIC = lm(ALTURA~DOSE, DICgarlic)
residuosDIC <- residuals(lmDIC)
resStudDIC <- rstandard(lmDIC)
resDIC <- residuals(lmDIC)
View(resDIC)
print(resDIC)
round(head(data.frame(resDIC, resStudDIC)), 4)
ggplot(DICgarlic, aes(x = DOSE, y = resStudDIC)) +
geom_point()
install.packages(lawstat)
install.packages("lawstat")
library(lawstat)
with(DICgarlic,
levene.test(ALTURA, DOSE, location = "mean"))
qqnorm(resStudDIC)
qqnorm(resStudDIC, col = 2)
qqline(resStudDIC, col = 2)
qqline(resStudDIC, col = 1)
qqline(resStudDIC, col = 2)
qqnorm(resStudDIC, col = 1)
qqline(resStudDIC, col = 2)
shapiro.test(resStudDIC)
ggplot(DICgarlic, aes(x = DOSE, y = resStudDIC)) +
geom_point()
# Gráfico Box-Cox
with(DICgarlic,
boxcox(y+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça"))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça"))
boxcox(modelDIC, lambda = seq(-2, 2, by = 0.1))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça"))
boxcox(modelDIC, lambda = seq(-2, 2, by = 0.1))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça"))
# Análise de Variância
aovDIC = aov(ALTURA ~ DOSE, DICgarlic)
boxcox(aovDIC, lambda = seq(-2, 2, by = 0.1))
boxcox(aovDIC, lambda = seq(-2, 2, by = 0.1))
boxcox(modelDIC, lambda = seq(-2, 2, by = 0.1))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça"))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
title("Gráfico BoxCox")))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
title("DICgarlic - Gráfico BoxCox")))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
title("DICgarlic - Gráfico BoxCox")))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
title("DICgarlic - Gráfico BoxCox")))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
title = "DICgarlic - Gráfico BoxCox"))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
title("DICgarlic - Gráfico BoxCox")))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
main = "DICgarlic - Gráfico BoxCox"))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
main = "DICgarlic - Gráfico Box-Cox"))
boxcox(aovDIC, lambda = seq(-2, 2, by = 0.1))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça",
main = "DICgarlic - Gráfico Box-Cox"))
# Gráfico Box-Cox
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça"),
title(main = "DICgarlic - Gráfico Box-Cox"))
# Gráfico Box-Cox
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURA+0.5 ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DICgarlic - Gráfico Box-Cox")
print(plot_boxcox)
})
with(DICgarlic,
boxcox(ALTURA+0.5~DOSE,
ylab = "Logaritmo da verossimilhânça"))
# Gráfico Box-Cox
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURA+0.5 ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DICgarlic - Gráfico Box-Cox")
print(plot_boxcox)
})
# Plota o croqui da área
croquiDIC <- ggplot(SampleDIC, aes(x = LINHA, y = COLUNA, fill = DOSE)) +
geom_tile(color = "white", lwd = 1) +
geom_text(aes(label = REPETIÇÃO), color = "white", size = 4) +
scale_color_continuous() +  # Usar uma escala contínua
scale_x_continuous(breaks = unique(SampleDIC$LINHA), labels = unique(SampleDIC$LINHA),
expand = c(0, 0)) +
scale_y_continuous(breaks = unique(SampleDIC$COLUNA), labels = unique(SampleDIC$COLUNA),
expand = c(0, 0)) +
labs(
x = "Coluna",
y = "Linha",
title = "Croqui | DIC Alho",
fill = "Raios Gama (Gy)") +
theme_light() +
theme(
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5),  # Ajustar a posição dos rótulos do eixo x
axis.text.y = element_text(angle = 0, vjust = 0.5, hjust = 0.5),  # Ajustar a posição dos rótulos do eixo y
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5)
)
print(croquiDIC)
# Plota o croqui da área
croquiDIC <- ggplot(SampleDIC, aes(x = LINHA, y = COLUNA, fill = DOSE)) +
geom_tile(color = "white", lwd = 1) +
geom_text(aes(label = REPETIÇÃO), color = "white", size = 4) +
scale_color_continuous() +  # Usar uma escala contínua
scale_x_continuous(breaks = unique(SampleDIC$LINHA), labels = unique(SampleDIC$LINHA),
expand = c(0, 0)) +
scale_y_continuous(breaks = unique(SampleDIC$COLUNA), labels = unique(SampleDIC$COLUNA),
expand = c(0, 0)) +
labs(
x = "Coluna",
y = "Linha",
title = "DIC Alho | Croqui",
fill = "Raios Gama (Gy)") +
theme_light() +
theme(
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5),  # Ajustar a posição dos rótulos do eixo x
axis.text.y = element_text(angle = 0, vjust = 0.5, hjust = 0.5),  # Ajustar a posição dos rótulos do eixo y
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5)
)
print(croquiDIC)
# Gráfico Box-Cox
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURA+0.5 ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DICgarlic - Gráfico Box-Cox")
print(plot_boxcox)
})
# Gráfico Box-Cox
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURA+0.5 ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DIC Alho | Gráfico Box-Cox")
print(plot_boxcox)
})
DICgarlic$ALTURAt <- log(DICgarlic$ALTURA)
View(DICgarlic)
# Modelo linear
lmDICt = lm(ALTURAt~DOSE, DICgarlic)
resDIC <- residuals(lmDICt)           # Resíduos
resStudDIC <- rstandard(lmDICt)       # Resíduos studentizados
resDICt <- residuals(lmDICt)           # Resíduos
resStudDICt <- rstandard(lmDICt)       # Resíduos studentizados
qqnorm(resStudDICt, col = 1)
qqline(resStudDICt, col = 2)
lmDIC = lm(ALTURA~DOSE, DICgarlic)
resDIC <- residuals(lmDIC)           # Resíduos
resStudDIC <- rstandard(lmDIC)       # Resíduos studentizados
round(head(data.frame(resDIC, resStudDIC)), 4)
# Gráfico Q-Qplot
qqnorm(resStudDIC, col = 1)
qqline(resStudDIC, col = 2)
# Gráfico Q-Qplot dos respíduos transformados
qqnorm(resStudDICt, col = 1)
qqline(resStudDICt, col = 2)
ggplot(DICgarlic, aes(x = DOSE, y = resStudDIC)) +
geom_point()
# Levene | Teste de homogeneidade de variâncias
with(DICgarlic,
levene.test(ALTURA, DOSE, location = "mean"))
# Levene | Teste de homogeneidade de variâncias
with(DICgarlic,
levene.test(ALTURAt, DOSE, location = "mean"))
# Shapiro-Wilk | Teste de normalidade dos resíduos
shapiro.test(resStudDICt)
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURAt+0.5 ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DIC Alho | Gráfico Box-Cox")
print(plot_boxcox)
})
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURAt ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DIC Alho | Gráfico Box-Cox")
print(plot_boxcox)
})
# Gráfico Box-Cox - Avaliação do lambda
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURA ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DIC Alho | Gráfico Box-Cox")
print(plot_boxcox)
})
# Gráfico Box-Cox | Validação da transformação - Lambda = 1 pertence ao intervalo de confiança
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURAt ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DIC Alho | Gráfico Box-Cox após transformação")
print(plot_boxcox)
})
# Análise de Variância
anova(lmDICt)
with(DICgarlic,
dic(DOSE, ALTURAt, hvar = "levene"))
with(DICgarlic,
dic(DOSE, ALTURAt, hvar = "levene"))
with(DICgarlic,
dic(DOSE, ALTURAt, hvar = "levene", quali = F, mcomp = "tukey", sigF = 0.05, sigT = 0.05))
# DIC
DICgarlic$DOSE <- as.numeric(DICgarlic$DOSE)
with(DICgarlic,
dic(DOSE, ALTURAt, hvar = "levene", quali = F, mcomp = "tukey", sigF = 0.05, sigT = 0.05))
# Levene | Teste de homogeneidade de variâncias
with(DICgarlic,
levene.test(ALTURA, DOSE, location = "mean"))
## ----
# Definição de caminhos utilizando o pacote "here"
dirRaw <- here("RawData")
dirProcessed <- here("DIC")
# Lê o arquivo em formato Excel
pathRaw <- file.path(dirRaw, "DIC-garlic.xlsx")
DICgarlic <- read_excel(pathRaw)
# Seed para aleatorizações (n° USP)
set.seed(15380462)
# Aleatorização das parcelas experimentais
SampleDIC <- DICgarlic[sample(nrow(DICgarlic)), ]
# Cria um dataframe com linhas (n = x) e (n = y) colunas associarmos ao DICgarlic
Linha <- rep(1:7, each = 4)
Coluna <- rep(1:4, times = 7)
Arranjo <- data.frame(LINHA = Linha, COLUNA = Coluna)
SampleDIC <- cbind(SampleDIC, Arranjo)
# Transforma a dose em um fator
SampleDIC$DOSE <- as.factor(SampleDIC$DOSE)
# Plota o croqui da área
croquiDIC <- ggplot(SampleDIC, aes(x = LINHA, y = COLUNA, fill = DOSE)) +
geom_tile(color = "white", lwd = 1) +
geom_text(aes(label = REPETIÇÃO), color = "white", size = 4) +
scale_color_continuous() +  # Usar uma escala contínua
scale_x_continuous(breaks = unique(SampleDIC$LINHA), labels = unique(SampleDIC$LINHA),
expand = c(0, 0)) +
scale_y_continuous(breaks = unique(SampleDIC$COLUNA), labels = unique(SampleDIC$COLUNA),
expand = c(0, 0)) +
labs(
x = "Coluna",
y = "Linha",
title = "DIC Alho | Croqui",
fill = "Raios Gama (Gy)") +
theme_light() +
theme(
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5),  # Ajustar a posição dos rótulos do eixo x
axis.text.y = element_text(angle = 0, vjust = 0.5, hjust = 0.5),  # Ajustar a posição dos rótulos do eixo y
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5)
)
print(croquiDIC)
# Transforma a dose em um fator
DICgarlic$DOSE <- as.factor(DICgarlic$DOSE)
# Gráfico de pontos
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_point() +
expand_limits(y = 0) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | Diagrama de Dispersão") +
theme(
plot.title = element_text(hjust = 0.5))
# Gráfico boxplot
ggplot(DICgarlic, aes(x = DOSE, y = ALTURA)) +
geom_boxplot() +
expand_limits(y = 0) +
labs(
x = "Dose (Gy)",
y = "Altura (cm)",
title = "DIC Alho | BoxPlot") +
theme(
plot.title = element_text(hjust = 0.5))
# Análise de Variância
aovDIC = aov(ALTURA ~ DOSE, DICgarlic)
anova(aovDIC)
plot(aovDIC)
# Levene | Teste de homogeneidade de variâncias
with(DICgarlic,
levene.test(ALTURA, DOSE, location = "mean"))
# Shapiro-Wilk | Teste de normalidade dos resíduos
shapiro.test(resStudDIC)
# Modelo linear
lmDIC = lm(ALTURA~DOSE, DICgarlic)
resDIC <- residuals(lmDIC)           # Resíduos
resStudDIC <- rstandard(lmDIC)       # Resíduos studentizados
# Shapiro-Wilk | Teste de normalidade dos resíduos
shapiro.test(resStudDIC)
qqnorm(resStudDIC, col = 1)
qqline(resStudDIC, col = 2)
# Gráfico Box-Cox - Avaliação do lambda
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURA ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DIC Alho | Gráfico Box-Cox")
print(plot_boxcox)
})
# Transformação de dados p/ lambda = 0
DICgarlic$ALTURAt <- log(DICgarlic$ALTURA)
lmDICt = lm(ALTURAt~DOSE, DICgarlic)
resDICt <- residuals(lmDICt)           # Resíduos
resStudDICt <- rstandard(lmDICt)
# Levene | Teste de homogeneidade de variâncias após transformação
with(DICgarlic,
levene.test(ALTURAt, DOSE, location = "mean"))
# Shapiro-Wilk | Teste de normalidade dos resíduos após transformação
shapiro.test(resStudDICt)
qqnorm(resStudDICt, col = 1)
qqline(resStudDICt, col = 2)
# Gráfico Box-Cox | Validação da transformação - Lambda = 1 pertence ao intervalo de confiança
with(DICgarlic, {
plot_boxcox <- boxcox(ALTURAt ~ DOSE,
ylab = "Logaritmo da verossimilhança")
title(main = "DIC Alho | Gráfico Box-Cox após transformação")
print(plot_boxcox)
})
# Análise de Variância
anova(lmDICt)
# DIC
DICgarlic$DOSE <- as.numeric(DICgarlic$DOSE)
with(DICgarlic,
dic(DOSE, ALTURAt, hvar = "levene", quali = F, mcomp = "tukey", sigF = 0.05, sigT = 0.05))
